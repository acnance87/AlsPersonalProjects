@{
    ViewData["Title"] = "Home Page";
}
@model IEnumerable<string>
<style>
    .button-spaced {
        margin: 2px;
    }

    .special {
        background-color: orange;
        color: white;
    }

    .special:hover {
            background-color: darkorange;
    }

    #baconated {
        display: none;
    }

    /* Modal container styling */
    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
        background-color: rgba(0, 0, 0, 0.1);
        color: lightcoral;
        padding: 20px;
        border-radius: 10px;
        font-size: 6em;
        text-align: center;
        vertical-align: middle;
    }

    /* Flashing animation */
    @@keyframes flash {
        0%, 100% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }
    }

    /* Fade out animation */
    @@keyframes fadeOut {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
</style>

<div class="container-fluid">
    <div id="resultsContainer">
        <h2>Your mission, should you choose to accept it...</h2>
        <p>Find the Wiki page for <b>Kevin Bacon</b> as fast as you can.</p>
        <p>Pick a starter word, or enter your own:</p>
        <div id="seedWordsContainer">
            @foreach (var word in Model) {
                <button onclick="getNextWordFromButton(event);" class="btn-primary button-spaced">@word</button>
            }
        </div>
        <a id="newWords" href="#">Get new words</a>
        <br />
        <br />
        <label for="word">Enter a word</label>
        <input type="text" id="word" />
        <button id="go" class="btn-primary">Let's go</button>
        <span id="iterationCount" data-count="1"></span>
        <div id="flashingNumber" class="modal"></div>
    </div>
</div>
<div id="baconated">
    <h2>You did it big dawg!</h2>
    <p id="totalAttempts"></p>
    @Html.ActionLink("Start over", "Index", "Home")
</div>

@section Scripts {
    <script>
        $('#newWords').on('click', function (e) {
            e.preventDefault();

            $.ajax({
                url: "/Home/GetNewWords",
                type: "GET",
                success: function (data) {
                    populateNewWords(data);
                }
            });
        });

        $('#go').on('click', function (e) {
            e.preventDefault();

            let word = $('#word').val();
            GetNextWords(word);
        });

        function getNextWordFromButton(e) {
            e.preventDefault();

            let word = e.target.innerHTML;
            GetNextWords(word);
        }

        function GetNextWords(word) {
            if (checkKevinBacon(word)) {
                let iterationCount = $('#iterationCount').attr('data-count');
                $('#resultsContainer').hide();
                $('#totalAttempts').text(`You did in ${iterationCount} attempts, that's slick.`);
                $('#baconated').show();
            }
            else {
                $.ajax({
                    url: "/Home/GetNextWords",
                    type: "GET",
                    data: {
                        word: word
                    },
                    success: function (data) {
                        incrementIterationCount();
                        populateNewWords(data);
                        checkKevinBacon(data);
                    }
                });
            }
        }

        function populateNewWords(data) {
            let container = $('#seedWordsContainer');

            $(container).html('');
            data.forEach(word => {
                const button = document.createElement('button');
                button.classList.add('btn-primary', 'button-spaced');
                if (checkKevinBacon(word)) {
                    button.classList.add('special');
                }
                button.innerText = word;
                button.onclick = button.onclick = function (event) {
                    getNextWordFromButton(event);
                };
                container.append(button);
            });
        }

        function incrementIterationCount() {
            let iterationCount = $('#iterationCount').attr('data-count');
            let currentValue = parseInt(iterationCount, 10);
            let nextValue = currentValue + 1;
            $('#iterationCount').data('count', nextValue)
            $('#iterationCount').attr('data-count', nextValue);
            showFlashingNumber(nextValue);
        }

        function showFlashingNumber(value) {
            let modal = $('#flashingNumber');
            modal.text(value);
            modal.css('display', 'block');

            modal.animate({ opacity: 1 }, 150) // Flash in
                .delay(150) 
                .animate({ opacity: 0 }, 150, function () { // Fade out
                    modal.css('display', 'none');
                });
        }

        function checkKevinBacon(word) {
            if (word === "Kevin Bacon") {
                return true;
            }
        }
    </script>
}