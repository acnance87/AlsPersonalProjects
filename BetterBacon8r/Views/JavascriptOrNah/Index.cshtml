@using AlsProjects.ViewModels
@model JavascriptOrNahViewModel

<style>
    .you-win {
        background-color: #d4edda;
        border: 2px solid #28a745;
        color: #155724;
        border-radius: 10px;
        padding: 1rem;
        box-shadow: 0 0 10px #28a74588;
    }

    .itsJs {
        background-color: #d4edda;
        border: 2px solid #28a745;
    }

    .frick {
        background-color: #f8d7da;
        border: 2px solid #dc3545;
        color: #721c24;
        border-radius: 10px;
        padding: 1rem;
        box-shadow: 0 0 10px #dc354588;
    }

    .notJs {
        background-color: #f8d7da;
        border: 2px solid #dc3545;
    }

    .wordChoice {
        color: darkslategrey;
    }

    .scoreContainer {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 1rem 2rem;
        border-radius: 10px;
        font-weight: bold;
        z-index: 999;
        box-shadow: 0 0 5px rgba(0,0,0,0.3);
        transition: opacity 0.5s ease, transform 0.5s ease;
        opacity: 0.4;
    }
</style>
<div class="text-center">
    <div class="you-win" style="display: none;">
        <h1>Nice!</h1>
    </div>
    <div class="frick" style="display: none;">
        <h1>Nope!</h1>
    </div>
    <div class="playboard" style="display: none;">
        <div>
            <br />
            <h1>
                <pre class="wordChoice bg-light badge badge-pill"></pre>
            </h1>
            <div class="btn-group-lg btn-group-vertical">
                <h5>Is this a JavaScript library or just a regular word?</h5>
                <br />
                <button class="isJsWord btn itsJs">It's JS 👍</button>
                <br />
                <button class="regular btn notJs">Not JS 👎</button>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div class="scoreContainer" style="display: none;">
        <p class="fire">🔥</p>
        <h3>
            <pre class="score">0</pre>
        </h3>
    </div>
</div>


@section Scripts {
    <script>
        const jsWords = [@Html.Raw(string.Join(",", Model.JavascriptWords.Select(w => @$"'{w}'")))];
        const randomWords = [@Html.Raw(string.Join(",", Model.RandomWords.Select(w => @$"'{w}'")))];
        let currentIsJsWord = false;

        function updateScore(value) {
            $('.score').text(value);

            const newOpacity = Math.min(1, 0.4 + (value / 10) * 0.6);
            $('.scoreContainer').css('opacity', newOpacity);
            $('.fire').css('font-size', `${1 + newOpacity}rem`)
        }

        function correctClick() {
            $('.playboard').fadeOut(300, function () {
                $('.you-win').fadeIn(800, function () {
                    $('.you-win').fadeOut(100, function () {
                        $('.playboard').fadeIn(300, getWord());
                    });
                });
            });

            let score = $('.score').text();
            score++;
            updateScore(score);
            $('.scoreContainer').show(50);
        }

        function frick() {
            $('.scoreContainer').hide(50);

            $('.playboard').fadeOut(300, function () {
                $('.frick').fadeIn(800, function () {
                    $('.frick').fadeOut(100, function () {
                        $('.playboard').fadeIn(300, getWord());
                    });
                });
            });

            $('.score').text(0);
        }

        function getRandomInt(max) {
            max = Math.floor(max);
            return Math.floor(Math.random() * (max + 1));
        }

        function getWord() {
            currentIsJsWord = Math.random() < 0.5;

            const wordChoice = currentIsJsWord
                ? jsWords[getRandomInt(jsWords.length - 1)]
                : randomWords[getRandomInt(randomWords.length - 1)];

            if (currentIsJsWord)
                $('.wordChoice').text(wordChoice.toLowerCase());
            else
                $('.wordChoice').text(wordChoice.toUpperCase());
        }

        $('document').ready(function () {
            getWord();
            $('.playboard').show(300);

            $('.isJsWord').on('click', function () {
                currentIsJsWord ? correctClick() : frick();
            });

            $('.regular').on('click', function () {
                !currentIsJsWord ? correctClick() : frick();
            });
        });
    </script>
}